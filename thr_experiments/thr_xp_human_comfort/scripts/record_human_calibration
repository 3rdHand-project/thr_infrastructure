#!/usr/bin/env python
from subprocess import check_call
import rospy


def start_launchfile(pkg, launchfile, args=[]):
    command = ['roslaunch', pkg, launchfile + '.launch']
    command += args
    check_call(command)


def do_again(task):
    rospy.loginfo('Redo ' + task + '? y/N')
    return (raw_input() == 'y')


def generate_model():
    if do_again('model generation'):
        rospy.loginfo('Generating Human model, press enter when subject is ready')
        raw_input()
        start_launchfile('human_moveit_config', 'generate_model')


def generate_calibration(type_calibr='full'):
    if do_again('optitrack calibration'):
        rospy.loginfo('Generating Human calibrations, press enter when subject is ready')
        raw_input()
        args = ['sensor:=opt', 'reset_pose:=True', 'parameter:=' + type_calibr]
        start_launchfile('human_moveit_config', 'calibration', args)


def generate_reba_pose(laterality):
    if do_again(laterality + ' reba calculation'):
        rospy.set_param('/human/laterality', laterality)
        rospy.loginfo('Optimizing ' + laterality + ' REBA pose')
        start_launchfile('reba_optim', 'optimize_task')

if __name__ == '__main__':
    rospy.init_node('human_calibration')
    rospy.logwarn('Starting recording human calibration')
    generate_model()
    generate_calibration()
    generate_reba_pose('right')
    generate_reba_pose('left')
    rospy.logwarn('Calibration finished')
